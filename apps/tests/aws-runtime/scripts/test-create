#!/usr/bin/env bash

set -ex

## start at the root of tests/aws-runtime
cd "$(dirname $0)/.."

mkdir -p ./.eventual
cd ./.eventual

##CDK
echo "Testing Create-Eventual with AWS CDK"

PROJECT_NAME="testme"
EVENTUAL_PACKAGES=("../../../../../packages/@eventual/core" "../../../../../packages/@eventual/core-runtime" "../../../../../packages/@eventual/aws-client" "../../../../../packages/@eventual/cli" "../../../../../packages/@eventual/client" "../../../../../packages/@eventual/aws-runtime" "../../../../../packages/@eventual/testing" "../../../../../packages/@eventual/compiler" "../../../../../packages/@eventual/integrations-slack" "../../../../../packages/@eventual/aws-cdk" "../../../../../packages/@eventual/timeline" "../../../../../packages/@eventual/project")

rm -rf $PROJECT_NAME
../../../../packages/create-eventual/bin/index.js $PROJECT_NAME --target aws-cdk --serviceName test-service --skip-install --no-git --package-manager pnpm
cd $PROJECT_NAME

pnpm link ${EVENTUAL_PACKAGES[@]}

# CDK doesn't like mis-matched versions...
cd ./infra
pnpm install aws-cdk@2.50 aws-cdk-lib@2.50 constructs@10.1.154

cd ..
pnpm install

pnpm run build
pnpm run synth

cd ../

## SST
echo "Testing Create-Eventual with AWS SST"

rm -rf $PROJECT_NAME
../../../../packages/create-eventual/bin/index.js $PROJECT_NAME --target sst --serviceName test-service

# sst's "build" also bootstraps and needs permissions to get parameters.
# There seems to be no good way to test the build/synth without network/account access :(.

# cd $PROJECT_NAME

# npm link ${EVENTUAL_PACKAGES[@]}

# npm run build -- --stage test