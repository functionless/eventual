// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`esbuild-plugin json file 1`] = `
"(() => {
  // test-files/json-file.json
  var json_file_default = {};
})();
"
`;

exports[`esbuild-plugin mts workflow 1`] = `
""use strict";
(() => {
  // test-files/workflow.mts
  var doWork = activity("doWork", async (input) => input);
  var workflow_default = eventual(function* (input) {
    const items = yield doWork(input);
    yield Future.all(items.map(eventual(function* (item) {
      yield doWork(item);
    })));
    yield Future.all(items.map(eventual(function* (item) {
      yield doWork(item);
    })));
    yield Future.allSettled(items.map(eventual(function* (item) {
      yield doWork(item);
    })));
    yield Future.any(items.map(eventual(function* (item) {
      yield doWork(item);
    })));
    yield Future.race(items.map(eventual(function* (item) {
      yield doWork(item);
    })));
  });
})();
"
`;

exports[`esbuild-plugin open-account 1`] = `
""use strict";
(() => {
  // test-files/open-account.ts
  var open_account_default = eventual(function* ({ accountId, address, email, bankDetails }) {
    const rollbacks = [];
    try {
      yield createAccount(accountId);
    } catch (err) {
      console.error(err);
      throw err;
    }
    try {
      yield addAddress(accountId, address);
      rollbacks.push(eventual(function* () {
        return removeAddress(accountId);
      }));
      yield addEmail(accountId, email);
      rollbacks.push(eventual(function* () {
        return removeEmail(accountId);
      }));
      yield addBankAccount(accountId, bankDetails);
      rollbacks.push(eventual(function* () {
        return removeBankAccount(accountId);
      }));
    } catch (err) {
      yield Future.all(rollbacks.map(eventual(function* (rollback) {
        return rollback();
      })));
    }
  });
})();
"
`;

exports[`esbuild-plugin ts not workflow 1`] = `
""use strict";
(() => {
  // test-files/not-workflow.ts
  var doWork = async () => {
  };
  function not_workflow_default() {
    console.log(doWork);
  }
})();
"
`;

exports[`esbuild-plugin ts workflow 1`] = `
""use strict";
(() => {
  var doWork = activity("doWork", async (input) => input);
  var workflow_default = eventual(function* (input) {
    const items = yield doWork(input);
    yield Future.all(items.map(eventual(function* (item) {
      yield doWork(item);
    })));
    yield Future.all(items.map(eventual(function* (item) {
      yield doWork(item);
    })));
    yield Future.allSettled(items.map(eventual(function* (item) {
      yield doWork(item);
    })));
    yield Future.any(items.map(eventual(function* (item) {
      yield doWork(item);
    })));
    yield Future.race(items.map(eventual(function* (item) {
      yield doWork(item);
    })));
  });
})();
"
`;
