{
  "name": "@eventual/aws-runtime",
  "exports": {
    ".": {
      "import": "./lib/esm/index.js",
      "require": "./lib/cjs/index.js"
    },
    "./collector": "./collector/otel-collector-lite.zip"
  },
  "main": "./lib/cjs/index.js",
  "module": "./lib/esm/index.js",
  "version": "0.0.0",
  "scripts": {
    "test": "jest --passWithNoTests"
  },
  "dependencies": {
    "@aws-lambda-powertools/logger": "^1.4.1",
    "@aws-sdk/client-cloudwatch-logs": "^3.226.0",
    "@eventual/core": "workspace:^",
    "@middy/core": "^3.6.2",
    "@middy/error-logger": "^3.6.2",
    "@opentelemetry/api": "^1.3.0",
    "@opentelemetry/context-async-hooks": "^1.8.0",
    "@opentelemetry/core": "^1.8.0",
    "@opentelemetry/exporter-trace-otlp-grpc": "^0.34.0",
    "@opentelemetry/resources": "^1.8.0",
    "@opentelemetry/sdk-trace-base": "^1.8.0",
    "@opentelemetry/sdk-trace-node": "^1.8.0",
    "@opentelemetry/semantic-conventions": "^1.8.0",
    "aws-embedded-metrics": "^4.0.0",
    "aws-lambda": "^1.0.7",
    "node-fetch": "^2.6.7",
    "ulidx": "^0.3.0"
  },
  "peerDependencies": {
    "@aws-sdk/client-dynamodb": "^3.226.0",
    "@aws-sdk/client-eventbridge": "^3.226.0",
    "@aws-sdk/client-lambda": "^3.226.0",
    "@aws-sdk/client-s3": "^3.226.0",
    "@aws-sdk/client-scheduler": "^3.226.0",
    "@aws-sdk/client-sqs": "^3.226.0",
    "@types/aws-lambda": "8.10.108",
    "itty-router": "^2.6.6",
    "node-fetch": ">= 2.x"
  },
  "devDependencies": {
    "@aws-sdk/client-dynamodb": "3.226.0",
    "@aws-sdk/client-eventbridge": "3.226.0",
    "@aws-sdk/client-lambda": "3.226.0",
    "@aws-sdk/client-s3": "3.226.0",
    "@aws-sdk/client-scheduler": "3.226.0",
    "@aws-sdk/client-sqs": "3.226.0",
    "@types/aws-lambda": "8.10.108",
    "@types/jest": "^29",
    "@types/node": "^16",
    "@types/node-fetch": "^2.6.2",
    "itty-router": "2.6.6",
    "jest": "^29",
    "ts-jest": "^29",
    "ts-node": "^10.9.1",
    "typescript": "^4.9.3"
  },
  "jest": {
    "extensionsToTreatAsEsm": [
      ".ts"
    ],
    "roots": [
      "<rootDir>/src/"
    ],
    "transform": {
      "^.+\\.tsx?$": [
        "ts-jest",
        {
          "tsconfig": "tsconfig.test.json",
          "useESM": true
        }
      ]
    },
    "moduleNameMapper": {
      "@eventual/injected/(.*)": "<rootDir>/src/injected/$1",
      "^(\\.{1,2}/.*)\\.js$": "$1"
    }
  },
  "publishConfig": {
    "access": "public"
  }
}
